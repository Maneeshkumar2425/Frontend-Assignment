"use strict";(self.webpackChunkprojectweb=self.webpackChunkprojectweb||[]).push([[222],{"./src/stories/Timeline/Timeline.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColors:()=>CustomColors,Default:()=>Default,Horizontal:()=>Horizontal,WithIcons:()=>WithIcons,WithoutConnectors:()=>WithoutConnectors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Timeline_stories});var react=__webpack_require__("./node_modules/react/index.js");const Timeline_Timeline=_ref=>{let{events,orientation="vertical",showConnectors=!0,connectorColor="#e0e0e0",className=""}=_ref;const timelineClassName=`timeline ${orientation} ${className}`.trim();return react.createElement("div",{className:timelineClassName},events.map(((event,index)=>{const isLast=index===events.length-1,eventStyle={"--event-color":event.color||"#2196F3","--connector-color":connectorColor};return react.createElement("div",{key:event.id,className:"timeline-event",style:eventStyle},[react.createElement("div",{className:"event-content"},[react.createElement("div",{className:"event-icon"},event.icon||react.createElement("div",{className:"event-dot"})),react.createElement("div",{className:"event-details"},[react.createElement("h3",{className:"event-title"},event.title),react.createElement("p",{className:"event-date"},event.date),react.createElement("p",{className:"event-description"},event.description)])]),!isLast&&showConnectors&&react.createElement("div",{className:"event-connector"})])})))},stories_Timeline_Timeline=Timeline_Timeline;try{Timeline_Timeline.displayName="Timeline",Timeline_Timeline.__docgenInfo={description:"",displayName:"Timeline",props:{events:{defaultValue:null,description:"",name:"events",required:!0,type:{name:"TimelineEvent[]"}},orientation:{defaultValue:{value:"vertical"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"vertical"'},{value:'"horizontal"'}]}},showConnectors:{defaultValue:{value:"true"},description:"",name:"showConnectors",required:!1,type:{name:"boolean | undefined"}},connectorColor:{defaultValue:{value:"#e0e0e0"},description:"",name:"connectorColor",required:!1,type:{name:"string | undefined"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Timeline/Timeline.tsx#Timeline"]={docgenInfo:Timeline_Timeline.__docgenInfo,name:"Timeline",path:"src/stories/Timeline/Timeline.tsx#Timeline"})}catch(__react_docgen_typescript_loader_error){}const Timeline_stories={title:"Components/Timeline",component:stories_Timeline_Timeline,argTypes:{orientation:{control:{type:"select",options:["vertical","horizontal"]},description:"Orientation of the timeline"},showConnectors:{control:"boolean",description:"Whether to show connecting lines between events"},connectorColor:{control:"color",description:"Color of the connecting lines"},className:{control:"text",description:"Additional CSS class to apply to the timeline"}},parameters:{docs:{description:{component:"A timeline component that displays a series of events in chronological order."}}}},sampleEvents=[{id:"1",title:"Project Started",description:"Initial planning and setup phase",date:"2023-01-01",color:"#4CAF50"},{id:"2",title:"First Milestone",description:"Completed core functionality",date:"2023-02-15",color:"#2196F3"},{id:"3",title:"Beta Release",description:"First public release with basic features",date:"2023-04-01",color:"#FFC107"},{id:"4",title:"Version 1.0",description:"Full feature release with documentation",date:"2023-06-01",color:"#F44336"}],Template=args=>react.createElement("div",{style:{padding:"20px",maxWidth:"800px",margin:"0 auto"}},react.createElement(stories_Timeline_Timeline,{...args,events:sampleEvents})),Default=Template.bind({});Default.args={orientation:"vertical",showConnectors:!0,connectorColor:"#e0e0e0"};const Horizontal=Template.bind({});Horizontal.args={orientation:"horizontal",showConnectors:!0,connectorColor:"#e0e0e0"};const WithoutConnectors=Template.bind({});WithoutConnectors.args={orientation:"vertical",showConnectors:!1};const CustomColors=Template.bind({});CustomColors.args={orientation:"vertical",showConnectors:!0,connectorColor:"#ff0000"};const WithIcons=Template.bind({});WithIcons.args={orientation:"vertical",showConnectors:!0,events:sampleEvents.map((event=>({...event,icon:react.createElement("span",{style:{fontSize:"24px"}},"ðŸ“…")})))};const __namedExportsOrder=["Default","Horizontal","WithoutConnectors","CustomColors","WithIcons"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: TimelineProps) => {\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  return React.createElement('div', {\n    style: containerStyle\n  }, React.createElement(Timeline, {\n    ...args,\n    events: sampleEvents\n  }));\n}",...Default.parameters?.docs?.source}}},Horizontal.parameters={...Horizontal.parameters,docs:{...Horizontal.parameters?.docs,source:{originalSource:"(args: TimelineProps) => {\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  return React.createElement('div', {\n    style: containerStyle\n  }, React.createElement(Timeline, {\n    ...args,\n    events: sampleEvents\n  }));\n}",...Horizontal.parameters?.docs?.source}}},WithoutConnectors.parameters={...WithoutConnectors.parameters,docs:{...WithoutConnectors.parameters?.docs,source:{originalSource:"(args: TimelineProps) => {\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  return React.createElement('div', {\n    style: containerStyle\n  }, React.createElement(Timeline, {\n    ...args,\n    events: sampleEvents\n  }));\n}",...WithoutConnectors.parameters?.docs?.source}}},CustomColors.parameters={...CustomColors.parameters,docs:{...CustomColors.parameters?.docs,source:{originalSource:"(args: TimelineProps) => {\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  return React.createElement('div', {\n    style: containerStyle\n  }, React.createElement(Timeline, {\n    ...args,\n    events: sampleEvents\n  }));\n}",...CustomColors.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:"(args: TimelineProps) => {\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  return React.createElement('div', {\n    style: containerStyle\n  }, React.createElement(Timeline, {\n    ...args,\n    events: sampleEvents\n  }));\n}",...WithIcons.parameters?.docs?.source}}}}}]);